<%
doc = Nokogiri::XML(open(Blacklight.fedora_config[:internal_url] + "/get/#{fedora_object}/sdef:METADATA/PBCore"))
require 'lib/openvault/pbcore'
pbcore = Openvault::Pbcore::Document.new(open(Blacklight.fedora_config[:internal_url] + "/get/#{fedora_object}/sdef:METADATA/PBCore"))
%>

<div>
<h3 class="toggler">Source</h3>

<%
doc.xpath('//pbcore:pbcoreTitle', 'pbcore' => 'http://www.pbcore.org/PBCore/PBCoreNamespace.html').each do |e|
        %>
<div><strong><%= e.xpath('pbcore:titleType').first.content %></strong>
<%= e.xpath('pbcore:title').first.content %></div>
        <%
end
%>
<%
doc.xpath('//pbcore:pbcorePublisher', 'pbcore' => 'http://www.pbcore.org/PBCore/PBCoreNamespace.html').each do |e|
        if e.xpath('pbcore:publisher').first.content == 'WGBH Educational Foundation'
                next
        end
        %>
<div><strong><%= e.xpath('pbcore:publisherRole').first.content %></strong>
<%= e.xpath('pbcore:publisher').first.content %></div>
        <%
end
%>
</div>
<div>
<h3  class="toggler">Description</h3>
<%
doc.xpath('//pbcore:pbcoreDescription[not(pbcore:descriptionType = "Abstract")]', 'pbcore' => 'http://www.pbcore.org/PBCore/PBCoreNamespace.html').each do |e|
        %>
<div><strong><%= e.xpath('pbcore:descriptionType').first.content %></strong>
<%= e.xpath('pbcore:description').first.content %></div>
        <%
end
%>

</div>
<div>
<h3  class="toggler">Media</h3>
<% doc.xpath('//pbcore:pbcoreInstantiation/pbcore:formatDuration', 'pbcore' => 'http://www.pbcore.org/PBCore/PBCoreNamespace.html').map { |e| e.content }.to_a.uniq.each do |e| %>
<div><strong>Duration</strong>
<%= e %></div>  
<% end %>
<% doc.xpath('//pbcore:pbcoreInstantiation/pbcore:formatStandard', 'pbcore' => 'http://www.pbcore.org/PBCore/PBCoreNamespace.html').map { |e| e.content }.to_a.uniq.each do |e| %>
<div><strong>Standard</strong>
<%= e %></div>
<% end %>
<% doc.xpath('//pbcore:pbcoreInstantiation/pbcore:formatPhysical', 'pbcore' => 'http://www.pbcore.org/PBCore/PBCoreNamespace.html').map { |e| e.content }.to_a.uniq.each do |e| %>
<div><strong>Physical format</strong>
<%= e %></div>
<% end %>
<% doc.xpath('//pbcore:pbcoreInstantiation/pbcore:formatGenerations', 'pbcore' => 'http://www.pbcore.org/PBCore/PBCoreNamespace.html').map { |e| e.content }.to_a.uniq.each do |e| %>
<div><strong>Type</strong>
<%= e %></div><% end %>
<% doc.xpath('//pbcore:pbcoreInstantiation/pbcore:pbcoreFormatID[pbcore:formatIdentifierSource="wgbh.org/mars/barcode/"]/pbcore:formatIdentifier', 'pbcore' => 'http://www.pbcore.org/PBCore/PBCoreNamespace.html').map { |e| e.content }.to_a.uniq.each do |e| %>
<div><strong>Barcode</strong>
<%= e %></div>
<% end %>

</div>
<% contributors = pbcore.contributors %>
<% creators = pbcore.creators %>
<% unless contributors.blank? and creators.blank? %>
<div>
<h3  class="toggler">People</h3>
<% creators.each do |k, v| %>
<% k = 'People' if k.blank? %>
<div><strong><%= k %></strong>
<ul>
<% v.each do |e| %>
<%= content_tag(:li, link_to(e[:creator], catalog_index_path({:q => e[:creator]}))) %>
<% end %>
</ul>
</div>
<%      
end
%>
<% contributors.each do |k, v| %>
<% k = 'People' if k.blank? %>
<div><strong><%= k %></strong>
<ul>
<% v.each do |e| %>
<%= content_tag(:li, link_to(e[:contributor], catalog_index_path({:q => e[:contributor]}))) %>
<% end %>
</ul>
</div>
<%      
end
%>
</div>
<% end %>


<% coverage = pbcore.coverage %>

<% unless coverage['Temporal'].blank? %>
<div>   
<h3  class="toggler">Date</h3>
<div><strong>Covered</strong>

<ul>
      <% coverage['Temporal'].uniq.each do |s| %>
        <%= content_tag(:li, link_to(s[:coverage], catalog_index_path({:q => s[:coverage] }))) %>
      <% end %>
</ul>
</div>
</div>
<% end %>
        
<% unless coverage['Spatial'].blank? %>
<div>   
<h3  class="toggler">Place</h3>
<div><strong>Covered</strong>

<ul>
      <% coverage['Spatial'].uniq.each do |s| %>
        <%= content_tag(:li, link_to(s[:coverage], catalog_index_path({:q => s[:coverage] }))) %>
      <% end %>
</ul>
</div>
</div>
<% end %>

